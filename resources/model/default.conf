# description: model/prediction resource library defaults

[mednlp_default]
cui2vec_trainable = False

[mimicsid_default]
root_dir = ${default:root_dir}
data_dir = ${root_dir}/data
corpus_dir = ${default:root_dir}/corpus
temporary_dir = ${default:data_dir}/tmp
ontology_file = ${corpus_dir}/section-id-annotations/ontology.csv
batch_size = 20
model_type = section_id
decoded_attributes = set:
  tok_mask,
#  idxs,
  ttypes,
#  ents,
#  dependencies,
#  cui2vec_500_embedding,
  ${embedding}
section_prediction_model = bilstm-crf-tok-fasttext
header_prediction_model = bilstm-crf-tok-glove-300d

[mimicsid_header]
num_labels = 2
labels = tuple: n, y

[deeplearn_default]
model_name = ${mimicsid_default:name}
batch_dir = ${mimicsid_default:data_dir}/model/batch/${mimicsid_default:batch_size}
temporary_dir = ${mimicsid_default:data_dir}/model/model
results_dir = ${mimicsid_default:root_dir}/model/results

[deepnlp_default]
glove_trainable = False
fasttext_trainable = False
embedding = ${mimicsid_default:embedding}
labels = ${mimicsid_section_id_metadata:labels}
num_labels = ${mimicsid_section_id_metadata:num_labels}

[import]
sections = list: msid_default_imp, msid_section_id_imp

[msid_default_imp]
type = import
config_files = list:
    resource(zensols.deeplearn): resources/default.conf,
    resource(zensols.deepnlp): resources/default.conf


## Ontology
#
# creates section 'mimicsid_ontology' with the section IDs (section_id) and
# note categories (note) as section options
[msid_section_id_imp]
class_name = zensols.dataframe.DataframeConfig
default_section = mimicsid_section_id_metadata
csv_path = resource(zensols.mimicsid): resources/ontology.csv
columns = dict: {'section_id': 'labels'}
counts = dict: {'labels': 'num_labels'}
column_eval = eval({'import': ['zensols.nlp as n']}): f"col.unique().tolist() + ['{n.FeatureToken.NONE}']"
