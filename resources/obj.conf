# description: mimic MedSecId object


## Model installer
#
# version and defaults
[msid_model_info]
version = '${msid_model:version}'.replace('.', '_')
# TODO: update zenodo link
zenodo_base_url = https://zenodo.org/record/14736865/files

# section
[msid_model_section_id_resource]
class_name = zensols.install.Resource
url = eval: '${msid_model_info:zenodo_base_url}/${msid_default:section_prediction_model}-section-type-v' + ${msid_model_info:version} + '.zip'
name = None

[msid_model_section_id_installer]
class_name = zensols.install.Installer
package_resource = ${msid_default:package_resource}
resources = instance: list: msid_model_section_id_resource

# header
[msid_model_header_resource]
class_name = zensols.install.Resource
url = eval: '${msid_model_info:zenodo_base_url}/${msid_default:header_prediction_model}-header-v' + ${msid_model_info:version} + '.zip'
name = None

[msid_model_header_installer]
class_name = zensols.install.Installer
package_resource = ${msid_default:package_resource}
resources = instance: list: msid_model_header_resource


## Model UnPacker
#
[msid_section_id_model_packer]
class_name = zensols.deeplearn.model.pack.ModelUnpacker
version = ${msid_model:version}
installer = instance: msid_model_section_id_installer
model_config_overwrites = instance: msid_model_config

[msid_section_id_model_unpacker]
class_name = zensols.deeplearn.model.pack.ModelUnpacker
version = ${msid_model:version}
installer = instance: msid_model_header_installer
model_config_overwrites = instance: msid_model_config


## Predictor
#
# this enables the SQLite connection manager without needing PostgreSQL drivers
# installed; zensols.mednlp/medcat model resources are included
[msid_model_config]
class_name = zensols.deeplearn.model.SubsetConfig
sections = tuple:
  mimic_admission_persister,
  mimic_base_note_event_persister,
  mimic_diagnosis_persister,
  mimic_note_event_persister,
  mimic_patient_persister,
  mimic_procedure_persister,
  mimic_sqlite_conn_manager,
  medcat_status_resource,
  medcat_installer
options = tuple:
  mimic_default:conn_manager,
  mednlp_default:medcat_version

# model interface
[msid_section_predictor]
class_name = zensols.mimicsid.pred.SectionPredictor
section_id_model_unpacker = instance: msid_section_id_model_packer
header_model_unpacker = instance: msid_section_id_model_unpacker
min_section_body_len = 1
section_filter_type = eval({'import': ['zensols.mimicsid as m']}):
  m.SectionFilterType.keep_non_empty
