# description: mimic MedSecId object

## Defaults
#
[mimicsid_default]
package_resource = zensols.mimicsid


## Corpus installer
#
[mimicsid_resource]
class_name = zensols.install.Resource
url = https://zenodo.org/record/7150451/files/section-id-annotations.zip
name = section-id-annotations.zip
is_compressed = False

[mimicsid_installer]
class_name = zensols.install.Installer
package_resource = ${mimicsid_default:package_resource}
resources = instance: list: mimicsid_resource


## Annotated note resources
#
[mimicsid_anon_resource]
class_name = zensols.mimicsid.AnnotationResource
installer = instance: mimicsid_installer

[mimicsid_default_note]
class_name = zensols.mimicsid.AnnotatedNote
context = instance: mimic_note_context

[mimicsid_annotated_note_stash]
class_name = zensols.mimicsid.AnnotatedNoteStash
anon_resource = instance: mimicsid_anon_resource
corpus = instance: mimic_corpus
row_hadm_map_path = path: ${mimicsid_default:shared_data_dir}/row-hadm-map.dat

[mimicsid_note_stash]
class_name = zensols.mimicsid.NoteStash
delegate = instance: mimicsid_annotated_note_stash
corpus = instance: mimic_corpus


## Mimic overrides
#
# override the note factory to create AnnotatedNote instances instead of Note
[mimic_note_factory]
class_name = zensols.mimicsid.AnnotationNoteFactory
anon_resource = instance: mimicsid_anon_resource
annotated_note_section = mimicsid_default_note

# create a separate directory for shared mimicsid administration files so the
# notes that are stored are AnnotatedNote instances; otherwise, running the
# mimic CLI might end up creating administration instances having non-annotated
# versions of the notes
[mimic_hospital_adm_fs_stash]
path = path: ${mimicsid_default:shared_data_dir}/adm
