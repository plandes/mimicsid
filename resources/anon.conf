#@meta {desc: 'annotated notes config', date: '2024-04-06'}


## Corpus installer
#
[msid_resource]
class_name = zensols.install.Resource
url = https://zenodo.org/record/7150451/files/section-id-annotations.zip
name = section-id-annotations.zip
is_compressed = False

[msid_installer]
class_name = zensols.install.Installer
package_resource = ${msid_default:package_resource}
resources = instance: list: msid_resource


## Annotated note resources
#
[msid_anon_resource]
class_name = zensols.mimicsid.anon.AnnotationResource
installer = instance: msid_installer

[msid_default_note]
class_name = zensols.mimicsid.anon.AnnotatedNote
context = instance: mimic_note_context

[msid_annotated_note_stash]
class_name = zensols.mimicsid.anon.AnnotatedNoteStash
anon_resource = instance: msid_anon_resource
corpus = instance: mimic_corpus
row_hadm_map_path = path: ${msid_default:shared_data_dir}/row-hadm-map.dat

[msid_note_stash]
class_name = zensols.mimicsid.anon.NoteStash
delegate = instance: msid_annotated_note_stash
corpus = instance: mimic_corpus


## Mimic overrides
#
# override the note factory to create AnnotatedNote instances instead of Note
[mimic_note_factory]
class_name = zensols.mimicsid.anon.AnnotationNoteFactory
anon_resource = instance: msid_anon_resource
annotated_note_section = msid_default_note

# create a separate directory for shared mimicsid administration files so the
# notes that are stored are AnnotatedNote instances; otherwise, running the
# mimic CLI might end up creating administration instances having non-annotated
# versions of the notes
[mimic_note_dir_stash]
path = path: ${msid_default:shared_data_dir}/note-cont
