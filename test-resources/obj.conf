[appenv]
root_dir = .

[mimicsid_default]
shared_data_dir = target/share-data-dir

[import]
references = list: appenv
#sections = list: env_imp, dep_imp
sections = list: dep_imp

[mimic_sqlite_conn_manager]
db_file = path: test-resources/mimic3.sqlite3

# tests need an environment variable pointing to a configuration file with the
# postgres login
# [env_imp]
# type = environment
# section_name = env
# includes = set: MIMICSIDRC

[dep_imp]
type = import
config_files = list:
  resource(zensols.util): resources/default.conf,
  resource(zensols.util): resources/escape.conf,
  resource(zensols.mednlp): resources/default.conf,
  resource(zensols.mimic): resources/default.conf,
  resource(zensols.mimicsid): resources/default.conf,
#  ${env:mimicsidrc},
  resource(zensols.nlp): resources/obj.conf,
  resource(zensols.nlp): resources/mapper.conf,
  resource(zensols.mednlp): resources/obj.conf,
  resource(zensols.mimic): resources/obj.conf,
  resource(zensols.mimic): resources/decorator.conf


    # resource(zensols.util): resources/default.conf,
    # resource(zensols.util): resources/escape.conf,
    # resource(zensols.mednlp): resources/default.conf,
    # resource(zensols.mimic): resources/default.conf,
    # ${env:mimicsidrc},
    # test-resources/default.conf,
    # resource(zensols.nlp): resources/obj.conf,
    # resource(zensols.nlp): resources/mapper.conf,
    # resource(zensols.mednlp): resources/lang.conf,
    # resource(zensols.mednlp): resources/install.conf,
    # resource(zensols.mednlp): resources/filter-medical.conf,
    # resource(zensols.mimic): resources/obj.conf,
    # resource(zensols.mimic): resources/decorator.conf
